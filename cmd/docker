#!/bin/bash

# read command line
unset RUN TAG UPLOAD
for ARG in $@; do

    # set tag
    if [ ! -z "$SET_TAG" ] && [ -z "$TAG" ]; then
        TAG=$ARG;
        continue;
    fi

    # read long flags
    case $ARG in
        "--run") RUN=1;;
        "--upload") UPLOAD=1;;
        "-h"|"--help")
            echo "cmd/docker [--run] [--tag TAG] [--upload]"
            echo ""
            echo "Build & upload docker containers"
            echo ""
            echo "Options:"
            echo "  --run      Run locally"
            echo "  --upload   Upload to GHCR"
            exit 0
        ;;
    esac
done

# clear existing containers
docker kill $(docker ps -aq) &> /dev/null
docker rm $(docker ps -aq) &> /dev/null

# login to GitHub Container Registry
if [ ! -z "$UPLOAD" ]; then
    if [ -z "$GIT_TOKEN" ]; then
        if [ ! -f ".dockerkey" ]; then
            echo "ERROR: No GIT_TOKEN env var"
            exit 1
        else
            GIT_TOKEN=$(cat .dockerkey)
        fi
    fi
    docker login ghcr.io -u lakes-legendaries -p $GIT_TOKEN &> /dev/null
fi

# build image
docker build -t litai:latest .

# run image
if [ ! -z "$RUN" ]; then
    docker run -dp 80:80 -m 0.5G --cpus 0.25 --name litai litai:latest
fi

# upload image
if [ ! -z "$UPLOAD" ]; then
    docker tag litai:latest ghcr.io/lakes-legendaries/litai:latest
    docker push ghcr.io/lakes-legendaries/litai:latest
    $PYTHON cmd/delete-old.py
fi
